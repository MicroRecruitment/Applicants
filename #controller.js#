'use strict';
const rmq = require('./MQ/AMQP.js');
const model = require('./model.js');

const APP_QUEUE = 'applicant_queue';
const ADMIN_QUEUE = 'admin_queue';

class Controller {
  constructor() {
    var that = this;
    this.logic_ = new model();
    this.fnc_ = {
      register: function(frame) {
        console.log('Registering.');
        return that.logic_.Register(frame.registration_data);
      } 
    }
   /*
    * Create new amqp connection with randomly generated
    * consumption queue.
    */
    this.mq_ = new rmq(APP_QUEUE, this.Process.bind(this));
  }

 /*
  * Processing function for queue messages.
  * @author: Linus Berg
  * @param {obj} Message object from RabbitMQ.
  */
  Process(msg) {
    var recv_frame = msg;

    console.log('Applicant (Controller MQ)');
    var result = this.fnc_[recv_frame.data.call](recv_frame);

    var snd_frame = {
      status: 'OK',
      result: result,
      call: recv_frame.data.call,
      call_id: recv_frame.data.call_id,
      client_id: recv_frame.data.client_id
    };

    this.mq_.Send(recv_frame.reply, snd_frame);
  }
}

module.exports = Controller;
